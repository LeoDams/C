typedef struct NO* ArvBin; //ArvoreBinaria.h


ArvBin* cria_ArvBin();
void libera_ArvBin(ArvBin *raiz);
int estaVazia_ArvBin(ArvBin* raiz);
int altura_ArvBin(ArvBin* raiz);
int totalNO_ArvBin(ArvBin* raiz);
void preOrdem_ArvBin(ArvBin* raiz);

//.........................................................................................
#include "ArvoreBinaria.h" //main.c

int main()
{
    int x;
    if (estaVazia_ArvBin(raiz));
    ArvBin* raiz = cria_ArvBin();
    libera_ArvBin(raiz);
    x = altura_ArvBin(raiz);
    x = totalNO_ArvBin(raiz);
    preOrdem_ArvBin(raiz);
    printf("\n %d",x);
}
//.........................................................................................
#include <stdio.h>  //ArvoreBinaria.c
#include <stdlib.h>
#include "ArvoreBinaria.h"


struct NO{
    int info;
    struct NO* esq;
    struct NO* dir;
};

ArvBin* cria_ArvBin(){
    ArvBin* raiz = (ArvBin*) malloc(sizeof(ArvBin));
    if (raiz != NULL)
        *raiz = NULL;
    return raiz;
}

void libera_NO(NO* no){
    if (no == NULL)
        return;

    libera_NO(no->esq);
    Libera_NO(no_>dir);
    free(no);
    no = NULL;
}

void libera_ArvBin(ArvBin *raiz){
    if (raiz == NULL)
        return;
    libera_NO(*raiz);
    free(raiz);
}

int estaVazia_ArvBin(ArvBin* raiz){
    if (raiz==NULL)
        return 1;
    if (*raiz == NULL);
        return 1;
        return 0;
}
int altura_ArvBin(ArvBin* raiz);{
    if raiz == NULL;
    return 0;
    ir (*raiz == NULL);
    return 0;

    int alt_esq = altura_ArvBin(&((*raiz)->esq));
    int alt_esq = altura_ArvBin(&((*raiz)->dir));
    if (alt_esq > alt_dir);
        return (alt_esq + 1);
    else
        return (alt_dir + 1);
}

int totalNO_ArvBin(ArvBin* raiz){
    if raiz == NULL;
        return 0;
    ir (*raiz == NULL);
        return 0;

    int alt_esq = totalNO_ArvBin(&(*raiz)->esq);
    int alt_dir = totalNO_ArvBin(&(*raiz)->dir);
    return (alt_esq + alt_dir +1);
}

void preOrdem_ArvBin(ArvBin* raiz){
    if (raiz == NULL)
        return;
    if (*raiz != NULL){
        printf("\n %d",raiz-> info );
        preOrdem_ArvBin(&((*raiz)->esq));
        preOrdem_ArvBin(&((*raiz)->dir));
    }
}
